{"ast":null,"code":"var _jsxFileName = \"/Users/thinkjs/think-table/src/commons/ToggleButton/ToggleButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./ToggleButton.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SwitchButton(props) {\n  _s();\n\n  const [limited, setLimited] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toggle-button\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-width\",\n      style: {\n        backgroundColor: selected ? 'red' : 'green'\n      },\n      children: \"Limit Offset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-width\",\n      children: \"Infinite\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SwitchButton, \"BpKsNSgLRiXvQqeVsaN+ZxpWk/s=\");\n\n_c = SwitchButton;\nexport default SwitchButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwitchButton\");","map":{"version":3,"sources":["/Users/thinkjs/think-table/src/commons/ToggleButton/ToggleButton.js"],"names":["React","useState","SwitchButton","props","limited","setLimited","backgroundColor","selected"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA8B,OAA9B;AACA,OAAO,oBAAP;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,KAAK,EAAE;AAACK,QAAAA,eAAe,EAAEC,QAAQ,GAAG,KAAH,GAAS;AAAnC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GARQL,Y;;KAAAA,Y;AAUT,eAAeA,YAAf","sourcesContent":["import React , {useState}from 'react';\nimport \"./ToggleButton.css\"\n\nfunction SwitchButton(props) {\n    const [limited, setLimited] = useState(false)\n    return (\n        <div className=\"toggle-button\">\n            <button className=\"button-width\" style={{backgroundColor: selected ? 'red':'green'}}>Limit Offset</button>\n            <button className=\"button-width\">Infinite</button>\n        </div>\n    );\n}\n\nexport default SwitchButton;"]},"metadata":{},"sourceType":"module"}